AWSTemplateFormatVersion: '2010-09-09'

Resources:
  MaintenancePageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:my-maintenance-bucket-123${AWS::AccountId}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  MaintenancePageBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref MaintenancePageBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: arn:aws:s3:::${MaintenancePageBucket}/*

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: MaintenancePageDeploy
      Source:
        Type: GITHUB
        Location: https://github.com/YOUR_GITHUB_REPO
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      TimeoutInMinutes: 5
      BuildSpec: |
        version: 0.2
        phases:
          install:
            commands:
              - echo "Installing dependencies"
          build:
            commands:
              - aws s3 sync . s3://$MAINTENANCE_BUCKET --delete
        env:
          variables:
            MAINTENANCE_BUCKET: !Ref MaintenancePageBucket

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [codebuild.amazonaws.com]
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3DeployPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:DeleteObject
                Resource: !Sub arn:aws:s3:::${MaintenancePageBucket}/*

  EnableMaintenanceLambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.lambda_handler
      Runtime: python3.9
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          import boto3
          def lambda_handler(event, context):
              client = boto3.client('codebuild')
              client.start_build(projectName='MaintenancePageDeploy')
      Timeout: 10

  DisableMaintenanceLambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.lambda_handler
      Runtime: python3.9
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          import boto3
          def lambda_handler(event, context):
              s3 = boto3.client('s3')
              bucket_name = 'maintenance-page-${AWS::AccountId}'
              s3.delete_object(Bucket=bucket_name, Key='index.html')
      Timeout: 10

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaS3CodeBuildPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                Resource: !GetAtt CodeBuildProject.Arn
              - Effect: Allow
                Action:
                  - s3:DeleteObject
                Resource: !Sub arn:aws:s3:::${MaintenancePageBucket}/*

  EnableMaintenanceRule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: 'cron(0 23 ? * 6 *)'  # Every Saturday at 11 PM UTC
      Targets:
        - Arn: !GetAtt EnableMaintenanceLambda.Arn
          Id: "EnableMaintenance"

  DisableMaintenanceRule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: 'cron(0 2 ? * 7 *)'  # Every Sunday at 2 AM UTC
      Targets:
        - Arn: !GetAtt DisableMaintenanceLambda.Arn
          Id: "DisableMaintenance"

Outputs:
  MaintenancePageBucketURL:
    Value: !Sub "https://${MaintenancePageBucket}.s3.amazonaws.com/index.html"
    Description: "URL of the maintenance page hosted in S3"
